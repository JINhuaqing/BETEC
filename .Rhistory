r1 <- 2
r <- 21
n1 <- 13
n <- 55
mP <- prior.rej.prob(r1, r, n1, n, N=20000)
int.post.density(0.3, 1, r1, r, n1, n, mP, N=20000)
mP <- prior.rej.prob(r1, r, n1, n, N=20000)
int.post.density(0.3, 1, r1, r, n1, n, mP, N=20000)
mP <- prior.rej.prob(r1, r, n1, n, N=20000)
int.post.density(0.3, 1, r1, r, n1, n, mP, N=20000)
r1 <- 6
r <- 18
n1 <- 23
n <- 35
mP <- prior.rej.prob(r1, r, n1, n, N=20000)
int.post.density(0.3, 1, r1, r, n1, n, mP, N=20000)
int.post.density(0.4, 1, r1, r, n1, n, mP, N=20000)
rm(list=ls())
library(magrittr)
# compute the probability of early termination w.r.t p
PET <- function(r1, n1, p){
return(pbinom(r1, n1, p))
}
# compute the reject probability w.r.t p
rej.prob <- function(r1, r, n1, n, p){
xs <- (r1+1):(min(n1, r))
itm1 <- pbinom(r1, n1, p)
itm1 <- 0
itm2 <- sum(dbinom(xs, n1, p)*pbinom(r-xs, n-n1, p))
return(itm1+itm2)
}
# compute the probability of p0 > p when observing (r, n)
post.prob <- function(alpha0, beta0, r, n, p){
prob <- 1 - pbeta(p, alpha0+r, beta0+n-r)
return(prob)
}
# compute the probability to reject the drug
prior.rej.prob <- function(r1, r, n1, n,
alpha0=1, beta0=1, N=10000){
ps <- rbeta(N, alpha0, beta0)
probs <- sapply(ps, rej.prob, r1=r1, r=r, n1=n1, n=n)
return(mean(probs))
}
# compute the posterior density of p when rejecting the drug
post.density <- function(p, r1, r, n1, n, mP,
prior=function(p){dbeta(p, alpha0, beta0)}){
lkh <- rej.prob(r1, r, n1, n, p)
pr <- prior(p)
return(lkh*pr/mP)
}
# compute the Pr(lb<p<ub|reject the drug)
int.post.density <- function(lb, ub, r1, r, n1, n, mP, N=10000){
ps <- rbeta(N, alpha0, beta0)
post.wp <- function(p){
if (p>lb & p < ub){
return(post.density(p, r1, r, n1, n, mP))
}else{
return(0)
}
}
tr.probs <- sapply(ps, post.wp)
return(mean(tr.probs))
}
alpha0 <- 1
beta0 <- 1
# Test probabilities
p0 <- 0.3
p1 <- 0.5
# 4 hyper-parameters
pi1 <- 0.8
pi2 <- 0.9
a1 <- 0.05
a2 <- 0.20
N <- 20000
for (n1 in 1:100){
probs.l <- post.prob(alpha0, beta0, 1:n1, n1, p0)
probs.s <- post.prob(alpha0, beta0, 0:(n1-1), n1, p1)
idxs <- (probs.l>pi1) + (probs.s<a1)
r1range <- 1:n1
r1range <- r1range[idxs==2];
if (length(r1range) >= 1){
res.s1 <- c(r1range[1], n1)
print("Find addmissible solution")
break()
}else{
print(paste("Current n1 is", n1, "Need larger n1"))
}
}
n1 <- res.s1[2]
r1 <- res.s1[1]
bflag <- 0
for (n in (n1+1):100){
for (r in r1:(n-n1+r1)){
prob.2l <- post.prob(alpha0, beta0, r, n, p1)
mP <- prior.rej.prob(r1, r, n1, n, N=N)
prob.2s <- int.post.density(p1, 1, r1, r, n1, n, mP, N=N)
print(c(prob.2l, prob.2s))
if (prob.2l>pi2 & prob.2s<a2){
res.s2 <- c(r, n)
print("Find addmissible solution")
bflag <- 1
break()
}else if(prob.2s >= a2){
break()
}else{
print(paste("Current (r, n) is", r, n, ".", "Need to continue"))
}
}
if (bflag){
break()
}
}
rm(list=ls())
library(magrittr)
# compute the probability of early termination w.r.t p
PET <- function(r1, n1, p){
return(pbinom(r1, n1, p))
}
# compute the reject probability w.r.t p
rej.prob <- function(r1, r, n1, n, p){
xs <- (r1+1):(min(n1, r))
itm1 <- pbinom(r1, n1, p)
#itm1 <- 0
itm2 <- sum(dbinom(xs, n1, p)*pbinom(r-xs, n-n1, p))
return(itm1+itm2)
}
# compute the probability of p0 > p when observing (r, n)
post.prob <- function(alpha0, beta0, r, n, p){
prob <- 1 - pbeta(p, alpha0+r, beta0+n-r)
return(prob)
}
# compute the probability to reject the drug
prior.rej.prob <- function(r1, r, n1, n,
alpha0=1, beta0=1, N=10000){
ps <- rbeta(N, alpha0, beta0)
probs <- sapply(ps, rej.prob, r1=r1, r=r, n1=n1, n=n)
return(mean(probs))
}
# compute the posterior density of p when rejecting the drug
post.density <- function(p, r1, r, n1, n, mP,
prior=function(p){dbeta(p, alpha0, beta0)}){
lkh <- rej.prob(r1, r, n1, n, p)
pr <- prior(p)
return(lkh*pr/mP)
}
# compute the Pr(lb<p<ub|reject the drug)
int.post.density <- function(lb, ub, r1, r, n1, n, mP, N=10000){
ps <- rbeta(N, alpha0, beta0)
post.wp <- function(p){
if (p>lb & p < ub){
return(post.density(p, r1, r, n1, n, mP))
}else{
return(0)
}
}
tr.probs <- sapply(ps, post.wp)
return(mean(tr.probs))
}
alpha0 <- 1
beta0 <- 1
# Test probabilities
p0 <- 0.3
p1 <- 0.5
# 4 hyper-parameters
pi1 <- 0.8
pi2 <- 0.9
a1 <- 0.05
a2 <- 0.20
N <- 20000
for (n1 in 1:100){
probs.l <- post.prob(alpha0, beta0, 1:n1, n1, p0)
probs.s <- post.prob(alpha0, beta0, 0:(n1-1), n1, p1)
idxs <- (probs.l>pi1) + (probs.s<a1)
r1range <- 1:n1
r1range <- r1range[idxs==2];
if (length(r1range) >= 1){
res.s1 <- c(r1range[1], n1)
print("Find addmissible solution")
break()
}else{
print(paste("Current n1 is", n1, "Need larger n1"))
}
}
n1 <- res.s1[2]
r1 <- res.s1[1]
r1 <- 6
r <- 18
n1 <- 23
n <- 35
mP <- prior.rej.prob(r1, r, n1, n, N=20000)
int.post.density(0.4, 1, r1, r, n1, n, mP, N=20000)
mP <- prior.rej.prob(r1, r, n1, n, N=20000)
int.post.density(0.4, 1, r1, r, n1, n, mP, N=20000)
mP <- prior.rej.prob(r1, r, n1, n, N=200000)
int.post.density(0.4, 1, r1, r, n1, n, mP, N=200000)
mP <- prior.rej.prob(r1, r, n1, n, N=200000)
int.post.density(0.4, 1, r1, r, n1, n, mP, N=200000)
r1 <- 5
r <- 32
n1 <- 19
n <- 65
mP <- prior.rej.prob(r1, r, n1, n, N=200000)
int.post.density(0.4, 1, r1, r, n1, n, mP, N=200000)
r1 <- 3
r <- 21
n1 <- 10
n <- 41
mP <- prior.rej.prob(r1, r, n1, n, N=200000)
int.post.density(0.4, 1, r1, r, n1, n, mP, N=200000)
r1 <- 1
r <- 16
n1 <- 7
n <- 40
mP <- prior.rej.prob(r1, r, n1, n, N=200000)
int.post.density(0.3, 1, r1, r, n1, n, mP, N=200000)
r1 <- 2
r <- 20
n <- 51
mP <- prior.rej.prob(r1, r, n1, n, N=200000)
n1 <- 10
int.post.density(0.3, 1, r1, r, n1, n, mP, N=200000)
r1 <- 2
r <- 21
n1 <- 13
n <- 55
mP <- prior.rej.prob(r1, r, n1, n, N=200000)
int.post.density(0.3, 1, r1, r, n1, n, mP, N=200000)
r1 <- 2
r <- 23
n1 <- 13
n <- 61
mP <- prior.rej.prob(r1, r, n1, n, N=200000)
int.post.density(0.3, 1, r1, r, n1, n, mP, N=200000)
x <- c()
x
length(x)
setwd("C:/Users/Dell/Downloads/inbox/BEText")
library(magrittr)
library(dplyr)
list.files()
?list.files
list.files("*.RData")
list.files(pattern="*.RData")
list.files(pattern="b*.RData")
list.files(pattern="b*.RData")
list.files(pattern="bBET_*.RData")
list.files(pattern="bBET_.*.RData")
# Load the data for delta method
fs <- list.files(pattern="bBET.*.RData")
fs
ress <- list()
for (i in 1:length(fs)){
load(fs[i])
ress[[i]] <- output.res
}
ress
df1 <- res2df(ress[[1]]$results)
res2df <- function(res){
df1 <- lapply(res, function(x){do.call(rbind, x[[1]])}) %>% do.call(rbind, args=.)
df2 <- lapply(res, function(x){do.call(rbind, x[[2]])}) %>% do.call(rbind, args=.)
df.all <- cbind(df1, df2) %>% as.data.frame()
names(df.all) <- c("r1", "n1", "r", "n", "a1", "a2")
df.all
}
df1 <- res2df(ress[[1]]$results)
df1
df2 <- res2df(ress[[2]]$results)
df3 <- res2df(ress[[3]]$results)
df4 <- res2df(ress[[4]]$results)
df1 <- res2df(ress[[1]]$results);df1
df2 <- res2df(ress[[2]]$results);df2
df3 <- res2df(ress[[3]]$results);df3
df4 <- res2df(ress[[4]]$results);df4
ress[[4]]
fs
df4 <- res2df(ress[[4]]$results);df4
df1 <- res2df(ress[[1]]$results);df1
df2 <- res2df(ress[[2]]$results);df2
df3 <- res2df(ress[[3]]$results);df3
library(magrittr)
source("utilities.R")
myfun <- function(p0, p1, a1, a2, pi1, pi2, alpha0, beta0){
res.s1 <- bBET.stage1(p0, p1, pi1, a1, alpha0, beta0, nMax=100)
n1 <- res.s1[2]
r1 <- res.s1[1]
res.s2 <- deltabBET.stage2(r1, n1, p0, p1, pi2, a2, alpha0, beta0, nMax=200)
res <- c(res.s1, res.s2)
names(res) <- c("r1", "n1", "r", "n")
res
}
alpha0 <- 1
beta0 <- 1
# Test probabilities
p0 <- 0.1
p1 <- 0.3
# 4 hyper-parameters
pi1 <- 0.8
pi2 <- 0.9
a1 <- 0.05
a2 <- 0.05
a1s <- c(0.05, 0.1, 0.15)
a2s <- c(0.05, 0.1, 0.15, 0.2)
flag <- 1
all.res <- list()
corparas <- list()
for (nowa1 in a1s){
for (nowa2 in a2s){
print(c(flag, nowa1, nowa2))
nowres <- myfun(a1=nowa1, a2=nowa2, p0=p0, p1=p1, pi1=pi1, pi2=pi2, alpha0=alpha0, beta0=beta0)
all.res[[flag]] <- nowres
corparas[[flag]] <- c(nowa1, nowa2)
flag <- flag+1
}
}
params <- list(
pi1=pi1, pi2=pi2, p0=p0, p1=p1
)
output.res <- list(result=all.res, corparas=corparas, params=params)
save.name <- paste0("deltabBET_all", p0*100, "_", p1*100, ".RData")
save(output.res, file=save.name)
library(magrittr)
source("utilities.R")
myfun <- function(p0, p1, a1, a2, pi1, pi2, alpha0, beta0){
res.s1 <- bBET.stage1(p0, p1, pi1, a1, alpha0, beta0, nMax=100)
n1 <- res.s1[2]
r1 <- res.s1[1]
res.s2 <- deltabBET.stage2(r1, n1, p0, p1, pi2, a2, alpha0, beta0, nMax=200)
res <- c(res.s1, res.s2)
names(res) <- c("r1", "n1", "r", "n")
res
}
alpha0 <- 1
beta0 <- 1
# Test probabilities
p0 <- 0.2
p1 <- 0.4
# 4 hyper-parameters
pi1 <- 0.8
pi2 <- 0.9
a1 <- 0.05
a2 <- 0.05
a1s <- c(0.05, 0.1, 0.15)
a2s <- c(0.05, 0.1, 0.15, 0.2)
flag <- 1
all.res <- list()
corparas <- list()
for (nowa1 in a1s){
for (nowa2 in a2s){
print(c(flag, nowa1, nowa2))
nowres <- myfun(a1=nowa1, a2=nowa2, p0=p0, p1=p1, pi1=pi1, pi2=pi2, alpha0=alpha0, beta0=beta0)
all.res[[flag]] <- nowres
corparas[[flag]] <- c(nowa1, nowa2)
flag <- flag+1
}
}
params <- list(
pi1=pi1, pi2=pi2, p0=p0, p1=p1
)
output.res <- list(result=all.res, corparas=corparas, params=params)
save.name <- paste0("deltabBET_all", p0*100, "_", p1*100, ".RData")
save(output.res, file=save.name)
library(magrittr)
source("utilities.R")
myfun <- function(p0, p1, a1, a2, pi1, pi2, alpha0, beta0){
res.s1 <- bBET.stage1(p0, p1, pi1, a1, alpha0, beta0, nMax=100)
n1 <- res.s1[2]
r1 <- res.s1[1]
res.s2 <- deltabBET.stage2(r1, n1, p0, p1, pi2, a2, alpha0, beta0, nMax=200)
res <- c(res.s1, res.s2)
names(res) <- c("r1", "n1", "r", "n")
res
}
alpha0 <- 1
beta0 <- 1
# Test probabilities
p0 <- 0.05
p1 <- 0.25
# 4 hyper-parameters
pi1 <- 0.8
pi2 <- 0.9
a1 <- 0.05
a2 <- 0.05
a1s <- c(0.05, 0.1, 0.15)
a2s <- c(0.05, 0.1, 0.15, 0.2)
flag <- 1
all.res <- list()
corparas <- list()
for (nowa1 in a1s){
for (nowa2 in a2s){
print(c(flag, nowa1, nowa2))
nowres <- myfun(a1=nowa1, a2=nowa2, p0=p0, p1=p1, pi1=pi1, pi2=pi2, alpha0=alpha0, beta0=beta0)
all.res[[flag]] <- nowres
corparas[[flag]] <- c(nowa1, nowa2)
flag <- flag+1
}
}
params <- list(
pi1=pi1, pi2=pi2, p0=p0, p1=p1
)
output.res <- list(result=all.res, corparas=corparas, params=params)
save.name <- paste0("deltabBET_all", p0*100, "_", p1*100, ".RData")
save(output.res, file=save.name)
setwd("C:/Users/Dell/Downloads/inbox/BEText")
library(magrittr)
library(dplyr)
# Load the data for delta method
fs <- list.files(pattern="deltabBET.*.RData")
fs
load(fs[1])
ress <- list()
for (i in 1:length(fs)){
load(fs[i])
ress[[i]] <- output.res
}
res1.res <- do.call(rbind, ress[[1]]$result) %>% as.data.frame()
res1.res
res1.para <- do.call(rbind, ress[[1]]$corparas) %>% as.data.frame()
res1.para
rbind(res1.res. res1.para)
rbind(res1.res, res1.para)
cbind(res1.res, res1.para)
cbind(res1.res, res1.para) %>% is.data.frame()
list2df <- function(res){
res.res <- do.call(rbind, res$result) %>% as.data.frame()
res.para <- do.call(rbind, res$corparas) %>% as.data.frame()
cbind(res.res, res.para)
}
list2df(ress[[1]])
list2df(ress[[4]])
list2df(ress[[1]])
list2df(ress[[2]])
list2df(ress[[3]])
list2df(ress[[4]])
list2df(ress[[1]])
list2df(ress[[2]])
list2df(ress[[3]])
setwd("C:/Users/Dell/Downloads/inbox/BEText")
library(magrittr)
library(dplyr)
# Load the data for delta method
fs <- list.files(pattern="bBET.*.RData")
ress <- list()
rm(list=ls())
setwd("C:/Users/Dell/Downloads/inbox/BEText")
library(magrittr)
library(dplyr)
# Load the data for delta method
fs <- list.files(pattern="bBET.*.RData")
ress <- list()
for (i in 1:length(fs)){
load(fs[i])
ress[[i]] <- output.res
}
res2df <- function(res){
df1 <- lapply(res, function(x){do.call(rbind, x[[1]])}) %>% do.call(rbind, args=.)
df2 <- lapply(res, function(x){do.call(rbind, x[[2]])}) %>% do.call(rbind, args=.)
df.all <- cbind(df1, df2) %>% as.data.frame()
names(df.all) <- c("r1", "n1", "r", "n", "a1", "a2")
df.all
}
df4 <- res2df(ress[[4]]$results);df4
df1 <- res2df(ress[[1]]$results);df1
df2 <- res2df(ress[[2]]$results);df2
df3 <- res2df(ress[[3]]$results);df3
setwd("C:/Users/Dell/Downloads/inbox/BEText")
library(magrittr)
library(dplyr)
# Load the data for delta method
fs <- list.files(pattern="deltabBET.*.RData")
ress <- list()
for (i in 1:length(fs)){
load(fs[i])
ress[[i]] <- output.res
}
list2df(ress[[4]])[c(1, 5, 6), ]
list2df(ress[[1]])[c(1, 5, 6), ]
list2df <- function(res){
res.res <- do.call(rbind, res$result) %>% as.data.frame()
res.para <- do.call(rbind, res$corparas) %>% as.data.frame()
cbind(res.res, res.para)
}
list2df <- function(res){
res.res <- do.call(rbind, res$result) %>% as.data.frame()
res.para <- do.call(rbind, res$corparas) %>% as.data.frame()
cbind(res.res, res.para)
}
list2df(ress[[4]])[c(1, 5, 6), ]
list2df(ress[[1]])[c(1, 5, 6), ]
list2df(ress[[2]])[c(1, 5, 6), ]
list2df(ress[[3]])[c(1, 5, 6), ]
df4 <- res2df(ress[[4]]$results);df4[c(1, 2, 4), ]
setwd("C:/Users/Dell/Downloads/inbox/BEText")
library(magrittr)
library(dplyr)
# Load the data for delta method
fs <- list.files(pattern="bBET.*.RData")
ress <- list()
for (i in 1:length(fs)){
load(fs[i])
ress[[i]] <- output.res
}
res2df <- function(res){
df1 <- lapply(res, function(x){do.call(rbind, x[[1]])}) %>% do.call(rbind, args=.)
df2 <- lapply(res, function(x){do.call(rbind, x[[2]])}) %>% do.call(rbind, args=.)
df.all <- cbind(df1, df2) %>% as.data.frame()
names(df.all) <- c("r1", "n1", "r", "n", "a1", "a2")
df.all
}
df4 <- res2df(ress[[4]]$results);df4[c(1, 2, 4), ]
df1 <- res2df(ress[[1]]$results);df1[c(1, 2, 4), ]
df2 <- res2df(ress[[2]]$results);df2[c(1, 2, 4), ]
df3 <- res2df(ress[[3]]$results);df3[c(1, 2, 4), ]
